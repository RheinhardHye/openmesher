#!/usr/bin/env python

#import ConfigParser, datetime, glob, ipaddr, os, paramiko, probstat, shutil, subprocess, tempfile, IPy
from datetime import datetime
from StringIO import StringIO

def makequagga(mesh):
    print 'Generating Quagga config...'
    quaggafiles = {}
    
    for router in mesh.links:
        #BUG: Hostnames probably shouldn't be FQDNs, but actual hostnames
        
        zebra = StringIO()
        zebra.write('!\n')
        zebra.write('! Zebra configuration generated by OpenMesher\n')
        zebra.write('!   %s\n' %(datetime.strftime(datetime.now(), '%A, %d %B %Y %H:%M:%S -0800')))
        zebra.write('!\n')
        zebra.write('hostname %s\n' %(router))
        zebra.write('password secret123\n')
        zebra.write('enable password secret123\n')
        zebra.write('service advanced-vty\n')
        zebra.write('service password-encryption\n')
        zebra.write('service terminal-length 0\n')
        zebra.write('ip forwarding\n')
        zebra.write('!\n')
        zebra.write('line vty\n')
        zebra.write('!\n')
        
        ripd = StringIO()
        ripdnets = StringIO()
        ripddl = StringIO()

        ripd.write('!\n')
        ripd.write('! Zebra configuration generated by OpenMesher\n')
        ripd.write('!   %s\n' %(datetime.strftime(datetime.now(), '%A, %d %B %Y %H:%M:%S -0800')))
        ripd.write('!\n')
        ripd.write('hostname %s\n' %(router))
        ripd.write('password secret123\n')
        ripd.write('enable password secret123\n')
        ripd.write('log syslog\n')
        ripd.write('service advanced-vty\n')
        ripd.write('service password-encryption\n')
        ripd.write('service terminal-length 0\n')
        ripd.write('!\n')
        
        for link in mesh.links[router]:
            #BUG: Need to allow for adding custom interfaces by router FQDN from a text file
            ripd.write('interface %s\n' %(link.iface))
            ripd.write(' description %s\n' %(link.linkname()))
            ripd.write(' ip rip split-horizon poisoned-reverse\n')
            ripd.write(' ip rip send version 2\n')
            ripd.write(' ip rip receive version 2\n')
            ripd.write('!\n')
            #BUG: Need to allow for adding custom interfaces by router FQDN from a text file
            ripdnets.write(' network %s\n' %(link.iface))
            #BUG: Need to allow user to speficy their own access lists
            ripddl.write(' distribute-list p2pallow in %s\n' %(link.iface))
            ripddl.write(' distribute-list p2pallow out %s\n' %(link.iface))
        
        ripd.write('router rip\n')
        ripd.write(' timers basic 15 60 120\n')
        ripd.write(' redistribute kernel\n')
        ripd.write(' redistribute connected metric 1\n')
        ripd.write(' redistribute static\n')
        ripd.write(ripdnets.getvalue())
        ripd.write(ripddl.getvalue())
        ripd.write(' distance 1\n')
        ripd.write('!\n')
        #BUG: Need to allow user to speficy their own access lists
        ripd.write('access-list p2pallow permit 10.0.0.0/8\n')
        ripd.write('access-list p2pallow permit 192.168.42.0/24\n')
        ripd.write('access-list p2pallow deny any\n')
        ripd.write('!\n')
        ripd.write('line vty\n')
        ripd.write(' exec-timeout 0 0\n')
        ripd.write('!\n')
        
        quaggafiles[router] = {'/quagga/zebra.conf': zebra.getvalue(), '/quagga/ripd.conf': ripd.getvalue()}
    return quaggafiles






